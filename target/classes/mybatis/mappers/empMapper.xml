<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace = 회사 url뒤집고 + 업무이름 -->
<mapper namespace="co.kr.firstzone.emp">

	<!-- 직원 전체 조회 -->
	<select id="selectAll" resultType="com.shinhan.vo.EmpVO">
		select * from employees order by 1 desc
	</select>
	
	<!-- id로 직원 조회 -->
	<!-- resultType은 위에처럼 직원 전체 조회처럼 경로를 줘도 되고,
		sqlMapConfig.xml에서 설정한 empvo(별칭)으로 줘도 됨 -->
	<select id="selectById" parameterType="int" resultType="empvo">
		select * from employees where employee_id = #{id}
	</select>
	
	<select id="selectByDept" parameterType="int" resultType="empvo">
		select * from employees where department_id = #{id}
	</select>
	
	<select id="selectByCondition" parameterType="map" resultType="empvo">
		select * from employees where department_id = #{deptid} 
		and job_id  =#{jobid} and salary >= #{salary}
	</select>
	
	<select id="selectByCondition2" parameterType="empvo" resultType="empvo">
		select * from employees
		<!-- where 1=1을 하는 이유는? 조건문장에서 무조건 and로 시작하기 위해서.. 무조건 true인 조건을 주면 됨 -->
		where 1=1 	
		<if test="department_id != null and department_id != 0">
		<!-- 만약 위에서 where 1=1 를 하지 않았다면 다음은 조건이 
			시작하는 부분이니까 where로 시작해야 하는데 다음의 조건이 실행될지 안될지 모름.
		 -->
		<!-- 위의 조건이면 다음의 값을 조건으로 주겠다. : 동적으로 sql 조회하기 -->
			and department_id = #{department_id} 
		</if>
		<if test="job_id != null and job_id != ''">
			and job_id  = #{job_id}
		</if>
		<if test="salary != null and salary != 0">
			and salary  >= #{salary}
		</if> 
		<if test="hire_date != null">
			<!-- and hire_date >= #{hire_date} -->
			and hire_date &lt;= #{hire_date}
		</if>
		 
		 order by first_name
	</select>
	
	<!-- deptid가 배열로 들어왔을 때 Map으로 처리하기 1 -->
	<select id="selectByCondition3" parameterType="map" resultType="empvo">
		select * from employees
		where 1=1
		<if test="deptid != null">
			<!-- 배열로 들어오므로 in 사용 -->
			and department_id in 
			<!-- 다음 문장으로 (1,2,3)과 같은 문장으로 만들어줌  -->
			<foreach collection="deptid" item="dd" open="(" close=")" separator=",">
				#{dd} 		
			</foreach>
		</if>
		<!-- test에는 map에서 읽어야하는 값이 들어감. 즉, map의 key값이 들어감 -->
		<if test="jobid != null and jobid != ''">
			and job_id  = #{jobid}
		</if>
		<if test="salary != null and salary != 0">
			and salary  >= #{salary}
		</if> 
		<if test="hiredate != null">
 			and hire_date &lt;= #{hiredate}
		</if>
		order by first_name
	</select>
	
	<!-- deptid가 배열로 들어왔을 때 Map으로 처리하기 2 - 서브쿼리 사용 -->
	<select id="selectByCondition4" parameterType="map" resultType="empvo">
		select * from employees
		where 1=1
		<if test="deptid != null"> 
			and department_id in 
 			<foreach collection="deptid" item="dd" open="(" close=")" separator=",">
				<if test="dd==0">
					select department_id from departments
				</if>
				<if test="dd!=0">
					#{dd}
				</if>	
			</foreach>
		</if>
		<!-- test에는 map에서 읽어야하는 값이 들어감. 즉, map의 key값이 들어감 -->
		<if test="jobid != null and jobid != ''">
			and job_id  = #{jobid}
		</if>
		<if test="salary != null and salary != 0">
			and salary  >= #{salary}
		</if> 
		<if test="hiredate != null">
 			and hire_date &lt;= #{hiredate}
		</if>
		order by first_name
	</select>
	
	<select id="insert" parameterType="empvo">
		insert into employees(employee_id, first_name, last_name,
		 					job_id, manager_id, department_id,
		 					hire_date, phone_number, salary,
		 					email, commission_pct)
		values(seq_employee.nextval,#{first_name},#{last_name},
							#{job_id},
							<if test="manager_id != 0">
								#{manager_id}
							</if>
							<if test="manager_id == 0">
								null
							</if>,
							<if test="department_id != 0">
								#{department_id}
							</if>
							<if test="department_id == 0">
								null
							</if>,
							#{hire_date}, #{phone_number},
							#{salary}, #{email},#{commission_pct}) 
	</select>
	
	<select id="update" parameterType="empvo">
		 update employees
		 set employee_id = #{employee_id},
		 	first_name = #{first_name},
		 	last_name = #{last_name},
		 	job_id = #{job_id},
		 	<if test="manager_id != 0">
				manager_id = #{manager_id}
			</if>
			<if test="manager_id == 0">
				manager_id = null
			</if>,
			<if test="department_id != 0">
				department_id = #{department_id}
			</if>
			<if test="department_id == 0">
				department_id = null
			</if>, 
		 	hire_date = #{hire_date},
		 	phone_number = #{phone_number},
		 	salary = #{salary},
		 	email = #{email},
		 	commission_pct = #{commission_pct}
		 where employee_id = #{employee_id}
	</select>
	
	<select id="delete" parameterType="int">
		  delete from employees where employee_id = #{employee_id}
	</select>
	
</mapper>